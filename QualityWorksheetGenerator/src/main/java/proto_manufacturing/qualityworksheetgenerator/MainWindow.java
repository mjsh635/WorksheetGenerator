/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proto_manufacturing.qualityworksheetgenerator;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.File.*;
import java.nio.file.Files;
import java.nio.file.Path;

import java.nio.file.StandardCopyOption;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;



/**
 *
 * @author mjsh635
 */
public class MainWindow extends javax.swing.JFrame {
    FileNameExtensionFilter FileTypeFilter = new FileNameExtensionFilter("Excel", "xlxs", "xlsm");
    Properties UserSettings;
   
    
    public MainWindow() {
        initComponents();
        UserSettings = LoadProperties();
        
        
    String DatabasePath = UserSettings.getProperty("DataBasePath");
    String BlankFilePath = UserSettings.getProperty("BlankFilePath");
    String NewWorkSheetPath = UserSettings.getProperty("NewWorksheetPath");
    BlankWorksheetFilejTextField.setText(BlankFilePath);
    DatabaseFilejTextField.setText(DatabasePath);
    NewWorksheetFilejTextField.setText(NewWorkSheetPath);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        MainWindowJPanel = new javax.swing.JPanel();
        BlankWorksheetFileJButton = new javax.swing.JButton();
        DatabaseFileJButton = new javax.swing.JButton();
        DatabaseFilejTextField = new javax.swing.JTextField();
        BlankWorksheetFilejTextField = new javax.swing.JTextField();
        SerialNumberjTextField = new javax.swing.JTextField();
        GeneratejButton = new javax.swing.JButton();
        NewWorksheetFileJButton = new javax.swing.JButton();
        NewWorksheetFilejTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        BlankWorksheetFileJButton.setText("Blank Worksheet Location");
        BlankWorksheetFileJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BlankWorksheetFileJButtonActionPerformed(evt);
            }
        });

        DatabaseFileJButton.setText("Database File Location");
        DatabaseFileJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DatabaseFileJButtonActionPerformed(evt);
            }
        });

        SerialNumberjTextField.setText("Enter a Serial Number");

        GeneratejButton.setText("Generate");
        GeneratejButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GeneratejButtonActionPerformed(evt);
            }
        });

        NewWorksheetFileJButton.setText("New Worksheet Location");
        NewWorksheetFileJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewWorksheetFileJButtonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("HEY SCOTT, Remember you have to download the Excel file and select it periodically");

        javax.swing.GroupLayout MainWindowJPanelLayout = new javax.swing.GroupLayout(MainWindowJPanel);
        MainWindowJPanel.setLayout(MainWindowJPanelLayout);
        MainWindowJPanelLayout.setHorizontalGroup(
            MainWindowJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MainWindowJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(MainWindowJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 617, Short.MAX_VALUE)
                    .addGroup(MainWindowJPanelLayout.createSequentialGroup()
                        .addGroup(MainWindowJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(NewWorksheetFileJButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(DatabaseFileJButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(BlankWorksheetFileJButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(MainWindowJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(DatabaseFilejTextField)
                            .addComponent(BlankWorksheetFilejTextField)
                            .addComponent(NewWorksheetFilejTextField)))
                    .addGroup(MainWindowJPanelLayout.createSequentialGroup()
                        .addComponent(SerialNumberjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(GeneratejButton, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        MainWindowJPanelLayout.setVerticalGroup(
            MainWindowJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MainWindowJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(MainWindowJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SerialNumberjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(GeneratejButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 202, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(MainWindowJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(DatabaseFilejTextField)
                    .addComponent(DatabaseFileJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(MainWindowJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(BlankWorksheetFileJButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(BlankWorksheetFilejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(MainWindowJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(NewWorksheetFileJButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(NewWorksheetFilejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18))
        );

        jLabel1.getAccessibleContext().setAccessibleName("HEY SCOTT, Remember you have to download the Excel file");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainWindowJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainWindowJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void DatabaseFileJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DatabaseFileJButtonActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.setFileFilter(FileTypeFilter);
        if (chooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            UserSettings.setProperty("DataBasePath", chooser.getSelectedFile().toString());
            SaveProperties(UserSettings);
            DatabaseFilejTextField.setText(UserSettings.getProperty("DataBasePath"));
        } else {
            
        }
    }//GEN-LAST:event_DatabaseFileJButtonActionPerformed

    private void BlankWorksheetFileJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BlankWorksheetFileJButtonActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.setFileFilter(FileTypeFilter);
        if (chooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
             UserSettings.setProperty("BlankFilePath", chooser.getSelectedFile().toString());
            SaveProperties(UserSettings);
            BlankWorksheetFilejTextField.setText(UserSettings.getProperty("BlankFilePath"));        
        } else {
            
        }
    }//GEN-LAST:event_BlankWorksheetFileJButtonActionPerformed

    private void SaveProperties(Properties Props){
        try {
            Props.storeToXML(new FileOutputStream("settings.xml"), "");
        } catch (IOException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private Properties LoadProperties(){
        Properties Props = new Properties();
        try {
            Props.loadFromXML(new FileInputStream("settings.xml"));
            
            } catch (FileNotFoundException ex) {
                Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
            }
       return Props;
    }
    
    private void GeneratejButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GeneratejButtonActionPerformed
        
        String EmptyWorksheetPath = UserSettings.getProperty("BlankFilePath");
        String DataBasePath = UserSettings.getProperty("DataBasePath");
        String SerialNumber = SerialNumberjTextField.getText();
        String NewWorksheetPath = UserSettings.getProperty("NewWorksheetPath");
        String FileName = String.format("%s-Quality_Sheet.xlsm", SerialNumber);
        
        
        
        try {
            
            XSSFWorkbook DataBaseWorkbook;
            XSSFWorkbook EmptyWorkSheetBook;
            DataBaseWorkbook = new XSSFWorkbook(DataBasePath);
            
            XSSFSheet DBsheet = DataBaseWorkbook.getSheetAt(1); //get database sheet
            
            JOptionPane.showMessageDialog(rootPane, "post dependancy usage");
            XSSFRow DBrow;
            //search over all the rows in the sheet
            for (int i = 4; i < DBsheet.getLastRowNum(); i++) {
                DBrow = DBsheet.getRow(i);
                //couldnt find the number before a empty row
                if (DBrow.getCell(1)== null) {
                    JOptionPane.showMessageDialog(rootPane, String.format("Serial Number not Found %s, %s rows searched",SerialNumber, i));
                    break;
                }
                //found the serial number I was looking for
                if (DBrow.getCell(1).toString().equals(SerialNumber)){
                    System.out.println(i+1);
                    JOptionPane.showMessageDialog(rootPane, "Serial Number Found");
                    //scan over all the data in the row
                    
                   
                    
                    
                    try{
                        //create a new blank file
                        String target = NewWorksheetPath+"\\"+FileName;
                        
                        
                        //Files.copy(Path.of(EmptyWorksheetPath), Path.of(target), StandardCopyOption.REPLACE_EXISTING);
                        
                        EmptyWorkSheetBook = new XSSFWorkbook(EmptyWorksheetPath);
                        
                        XSSFSheet ESheet = EmptyWorkSheetBook.getSheetAt(0);//get Quality sheet
                        XSSFRow ERow;
                        String data;
                        XSSFCell celldata;
                        //assembler
                        ERow = ESheet.getRow(2);
                        celldata = DBrow.getCell(4);
                            if (celldata == null)
                            {
                                data = "N/A in DB";
                            }else{
                                data = celldata.toString();
                            }
                         ERow.createCell(2).setCellValue(data);
                            
                        
                        
                        
                        //Serial Number
                        ERow = ESheet.getRow(3);
                        celldata = DBrow.getCell(1);
                            if (celldata == null)
                            {
                                data = "N/A in DB";
                            }else{
                                data = celldata.toString();
                            }
                        ERow.createCell(2).setCellValue(data);
                        
                        //Model
                        ERow = ESheet.getRow(4);
                        celldata = DBrow.getCell(11);
                            if (celldata == null)
                            {
                                data = "N/A in DB";
                            }else{
                                data = celldata.toString();
                            }
                        ERow.createCell(2).setCellValue(data);
                        
                        //AssemblyDate
                        ERow = ESheet.getRow(5);
                        celldata = DBrow.getCell(6);
                            if (celldata == null)
                            {
                                data = "N/A in DB";
                            }else{
                                data = celldata.toString();
                            }
                        ERow.createCell(2).setCellValue(data);
                        
                        //EvacDate
                        ERow = ESheet.getRow(6);
                        celldata = DBrow.getCell(7);
                            if (celldata == null)
                            {
                                data = "N/A in DB";
                            }else{
                                data = celldata.toString();
                            }
                        ERow.createCell(2).setCellValue(data);
                        
                        //PinchOffDate
                        ERow = ESheet.getRow(7);
                        celldata = DBrow.getCell(8);
                            if (celldata == null)
                            {
                                data = "N/A in DB";
                            }else{
                                data = celldata.toString();
                            }
                        ERow.createCell(2).setCellValue(data);
                        
                        //TargetMat
                        ERow = ESheet.getRow(10);
                        celldata = DBrow.getCell(9);
                            if (celldata == null)
                            {
                                data = "N/A in DB";
                            }else{
                                data = celldata.toString();
                            }
                        ERow.createCell(2).setCellValue(data);
                        
                        //ceramic length
                        ERow = ESheet.getRow(11);
                        
                        ERow.createCell(2).setCellValue("N/A in DB");
                        
                        //Filament size
                        ERow = ESheet.getRow(12);
                        celldata = DBrow.getCell(10);
                            if (celldata == null)
                            {
                                data = "N/A in DB";
                            }else{
                                data = celldata.toString();
                            }
                        ERow.createCell(2).setCellValue(data);
                        
                        //Filament Resistance
                        ERow = ESheet.getRow(13);
                        celldata = DBrow.getCell(12);
                            if (celldata == null)
                            {
                                data = "N/A in DB";
                            }else{
                                data = celldata.toString();
                            }
                        ERow.createCell(2).setCellValue(data);
                        
                        //VacPreBake
                        ERow = ESheet.getRow(14);
                        celldata = DBrow.getCell(13);
                            if (celldata == null)
                            {
                                data = "N/A in DB";
                            }else{
                                data = celldata.toString();
                            }
                        ERow.createCell(2).setCellValue(data);
                        
                        //Vac Post Bake
                        ERow = ESheet.getRow(15);
                        celldata = DBrow.getCell(14);
                            if (celldata == null)
                            {
                                data = "N/A in DB";
                            }else{
                                data = celldata.toString();
                            }
                        ERow.createCell(2).setCellValue(data);
                        
                        //Bakeouttime
                        ERow = ESheet.getRow(16);
                        celldata = DBrow.getCell(15);
                            if (celldata == null)
                            {
                                data = "N/A in DB";
                            }else{
                                data = celldata.toString();
                            }
                        ERow.createCell(2).setCellValue(data);
                        
                        //Table number
                        ERow = ESheet.getRow(20);
                        celldata = DBrow.getCell(16);
                            if (celldata == null)
                            {
                                data = "N/A in DB";
                            }else{
                                data = celldata.toString();
                            }
                        ERow.createCell(2).setCellValue(data);
                        
                        //port number
                        ERow = ESheet.getRow(21);
                        celldata = DBrow.getCell(17);
                            if (celldata == null)
                            {
                                data = "N/A in DB";
                            }else{
                                data = celldata.toString();
                            }
                        ERow.createCell(2).setCellValue(data);
                        
                        //Max voltage
                        ERow = ESheet.getRow(22);
                        celldata = DBrow.getCell(18);
                            if (celldata == null)
                            {
                                data = "N/A in DB";
                            }else{
                                data = celldata.toString();
                            }
                        ERow.createCell(2).setCellValue(data);
                        
                        //Max beam current
                        ERow = ESheet.getRow(23);
                        celldata = DBrow.getCell(20);
                            if (celldata == null)
                            {
                                data = "N/A in DB";
                            }else{
                                data = celldata.toString();
                            }
                        ERow.createCell(2).setCellValue(data);
                        
                        //Max Fil Current
                        ERow = ESheet.getRow(24);
                        celldata = DBrow.getCell(22);
                            if (celldata == null)
                            {
                                data = "N/A in DB";
                            }else{
                                data = celldata.toString();
                            }
                        ERow.createCell(2).setCellValue(data);
                        
                        //time at Max Power
                        ERow = ESheet.getRow(25);
                        celldata = DBrow.getCell(21);
                            if (celldata == null)
                            {
                                data = "N/A in DB";
                            }else{
                                data = celldata.toString();
                            }
                        ERow.createCell(2).setCellValue(data);
                        
                        //time at max voltage
                        ERow = ESheet.getRow(26);
                        celldata = DBrow.getCell(19);
                            if (celldata == null)
                            {
                                data = "N/A in DB";
                            }else{
                                data = celldata.toString();
                            }
                        ERow.createCell(2).setCellValue(data);
                        
                        //vac level maintained
                        ERow = ESheet.getRow(29);
                        celldata = DBrow.getCell(23);
                            if (celldata == null)
                            {
                                data = "N/A in DB";
                            }else{
                                data = celldata.toString();
                            }
                        ERow.createCell(2).setCellValue(data);
                        
                        //arcing witnessed
                        ERow = ESheet.getRow(30);
                        celldata = DBrow.getCell(24);
                            if (celldata == null)
                            {
                                data = "N/A in DB";
                            }else{
                                data = celldata.toString();
                            }
                        ERow.createCell(2).setCellValue(data);
                        
                        //kv level
                        ERow = ESheet.getRow(31);
                        celldata = DBrow.getCell(25);
                            if (celldata == null)
                            {
                                data = "N/A in DB";
                            }else{
                                data = celldata.toString();
                            }
                        ERow.createCell(2).setCellValue(data);
                        
                        //vac level
                        ERow = ESheet.getRow(32);
                        celldata = DBrow.getCell(26);
                            if (celldata == null)
                            {
                                data = "N/A in DB";
                            }else{
                                data = celldata.toString();
                            }
                        ERow.createCell(2).setCellValue(data);
                        
                        //Vacuum level
                        ERow = ESheet.getRow(20);
                        
                        ERow.createCell(7).setCellValue("N/A in DB");
                        
                        //date placed in storage
                        ERow = ESheet.getRow(21);
                        celldata = DBrow.getCell(27);
                            if (celldata == null)
                            {
                                data = "N/A in DB";
                            }else{
                                data = celldata.toString();
                            }
                        ERow.createCell(7).setCellValue(data);
                        
                        //retest date
                        ERow = ESheet.getRow(22);
                        celldata = DBrow.getCell(28);
                            if (celldata == null)
                            {
                                data = "N/A in DB";
                            }else{
                                data = celldata.toString();
                            }
                        ERow.createCell(7).setCellValue(data);
                        
                        //Notes
                        ERow = ESheet.getRow(34);
                        celldata = DBrow.getCell(29);
                            if (celldata == null)
                            {
                                data = "N/A in DB";
                            }else{
                                data = celldata.toString();
                            }
                        ERow.createCell(1).setCellValue(data);
                        
                        //write values and close
                        FileOutputStream outputStream = new FileOutputStream(target);
                        EmptyWorkSheetBook.write(outputStream);
//                        EmptyWorkSheetBook.close;
                       
                        } catch (IOException ex) {
                             System.out.println("ERROR" + ex);  
                        }
                    JOptionPane.showMessageDialog(rootPane, String.format("File '%s' created",FileName));
                    break;
                }
           
            
                } 
           }catch (IOException ex) {
                Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(rootPane, ex);
        }catch (Exception E){
            JOptionPane.showMessageDialog(rootPane, E);
        }
        
        
        
    }//GEN-LAST:event_GeneratejButtonActionPerformed

    private void NewWorksheetFileJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewWorksheetFileJButtonActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.setFileSelectionMode(1);
        if (chooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            UserSettings.setProperty("NewWorksheetPath", chooser.getSelectedFile().toString());
            SaveProperties(UserSettings);
            NewWorksheetFilejTextField.setText(UserSettings.getProperty("NewWorksheetPath"));
        } else {
            
        }
    }//GEN-LAST:event_NewWorksheetFileJButtonActionPerformed
    
    
    
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainWindow().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BlankWorksheetFileJButton;
    private javax.swing.JTextField BlankWorksheetFilejTextField;
    private javax.swing.JButton DatabaseFileJButton;
    private javax.swing.JTextField DatabaseFilejTextField;
    private javax.swing.JButton GeneratejButton;
    private javax.swing.JPanel MainWindowJPanel;
    private javax.swing.JButton NewWorksheetFileJButton;
    private javax.swing.JTextField NewWorksheetFilejTextField;
    private javax.swing.JTextField SerialNumberjTextField;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
